{
  "uuid": "0121ed21-dc7d-4b60-95f5-f936e92f8d74",
  "lastMigration": 33,
  "name": "User Auth Service (copy)",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3002,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "c50be464-07d7-4ced-bfea-61a1adb821b6",
      "type": "http",
      "documentation": "Simulate user registration - has Dynamic Responses Using Handlebars",
      "method": "post",
      "endpoint": "auth/signup",
      "responses": [
        {
          "uuid": "fb772ce2-518b-4d25-8afa-98689685b36e",
          "body": "{\n  \"message\": \"User {{body 'email'}} registered successfully\",\n  \"userId\": \"{{faker 'string.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "5ee3429b-82af-46dd-bab6-2b9df1b6f5df",
      "type": "http",
      "documentation": "login",
      "method": "post",
      "endpoint": "auth/login",
      "responses": [
        {
          "uuid": "be3570a0-846a-4099-ba1b-17342ca01ef5",
          "body": "{\r\n  \"message\": \"User login successful\",\r\n  \"token\": \"Bearer {{faker 'string.alphanumeric' 32}}\"\r\n}\r\n",
          "latency": 0,
          "statusCode": 200,
          "label": "user login",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "email",
              "value": "user@gmail.com",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "password",
              "value": "p@ss",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9e8ecb9d-bcd9-4f93-bbec-a93b2700792a",
          "body": "{\r\n  \"message\": \"Welcome admin {{faker 'person.firstName'}}!\",\r\n  \"token\": \"{{faker 'string.uuid'}}\",\r\n  \"loginTime\": \"{{faker 'date.recent'}}\"\r\n}\r\n",
          "latency": 0,
          "statusCode": 200,
          "label": "admin login",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "email",
              "value": "admin@gmail.com",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "password",
              "value": "p@ss",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "abb1617d-9711-4406-a354-0bbfbfd285f5",
          "body": "{\r\n  \"error\": \"Invalid credentials\"\r\n}\r\n",
          "latency": 0,
          "statusCode": 401,
          "label": "Failed login",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "c4474921-a3ee-457e-bd96-fb8eaf8ee1d5",
      "type": "http",
      "documentation": "Return user profile - with Header Rule",
      "method": "get",
      "endpoint": "auth/profile",
      "responses": [
        {
          "uuid": "5b09b018-4368-436d-9254-677cca732c70",
          "body": "{\r\n  \"error\": \"Unauthorized access\"\r\n}\r\n",
          "latency": 0,
          "statusCode": 401,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1f774c1d-d789-4129-9ce5-873f710494bf",
          "body": "{\r\n  \"id\": \"123\",\r\n  \"name\": \"Sneha\",\r\n  \"email\": \"sneha@example.com\",\r\n  \"role\": \"user\"\r\n}\r\n",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "92a24f7c-418f-4d34-bc2d-ef9ae4226be7",
      "type": "http",
      "documentation": "Admin gets all users",
      "method": "get",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "eb89ef57-8307-4eb7-9411-2dd2ecce5fe4",
          "body": "[\r\n  {\r\n    \"id\": \"1\",\r\n    \"name\": \"Alice\",\r\n    \"email\": \"alice@example.com\"\r\n  },\r\n  {\r\n    \"id\": \"2\",\r\n    \"name\": \"Bob\",\r\n    \"email\": \"bob@example.com\"\r\n  }\r\n]\r\n",
          "latency": 3000,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "521f7c4f-0171-4e2c-a54b-42ba018f0525",
      "type": "http",
      "documentation": "Update user info",
      "method": "put",
      "endpoint": "users/:id",
      "responses": [
        {
          "uuid": "bfca47b5-ad7e-460b-8afd-de7dee9ea6b1",
          "body": "{\r\n  \"message\": \"User {{urlParam 'id'}} updated successfully\",\r\n  \"updatedFields\": {{body}}\r\n}\r\n",
          "latency": 300,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "293ffa96-0a79-44b8-9968-5fdf166031a4",
          "body": "{}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "43818511-9a20-46d8-b985-7874362a2224",
      "type": "http",
      "documentation": "Delete user",
      "method": "delete",
      "endpoint": "users/:id",
      "responses": [
        {
          "uuid": "2926a972-c6cf-4007-9d4d-c6ed4b0462ba",
          "body": "{\r\n  \"message\": \"User {{urlParam 'id'}} deleted successfully\"\r\n}\r\n",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "f9eb7c39-015c-4663-83aa-7bca31cbb466",
          "body": "{\r\n  \"message\": \"User {{urlParam 'id'}} doesnt exist!\"\r\n}\r\n",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": "RANDOM",
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "a7d8f3f7-d461-4a4f-b234-441bc1923286",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "",
      "responses": [
        {
          "uuid": "6a43c466-7012-4837-b088-4212f4bc55f7",
          "body": "Yup! Working!",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "c50be464-07d7-4ced-bfea-61a1adb821b6"
    },
    {
      "type": "route",
      "uuid": "5ee3429b-82af-46dd-bab6-2b9df1b6f5df"
    },
    {
      "type": "route",
      "uuid": "c4474921-a3ee-457e-bd96-fb8eaf8ee1d5"
    },
    {
      "type": "route",
      "uuid": "92a24f7c-418f-4d34-bc2d-ef9ae4226be7"
    },
    {
      "type": "route",
      "uuid": "521f7c4f-0171-4e2c-a54b-42ba018f0525"
    },
    {
      "type": "route",
      "uuid": "43818511-9a20-46d8-b985-7874362a2224"
    },
    {
      "type": "route",
      "uuid": "a7d8f3f7-d461-4a4f-b234-441bc1923286"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "callbacks": []
}